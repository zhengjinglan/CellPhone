<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.dao.ConsumeItemMapper">
  <resultMap id="BaseResultMap" type="com.aaa.entity.ConsumeItem">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_num" jdbcType="INTEGER" property="itemNum" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    item_id, type_id, item_name, item_num, gmt_create, gmt_modified, operator
  </sql>
  <select id="selectByExample" parameterType="com.aaa.entity.ConsumeItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from consume_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consume_item
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from consume_item
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aaa.entity.ConsumeItemExample">
    delete from consume_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aaa.entity.ConsumeItem">
    <selectKey keyProperty="itemId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into consume_item (type_id, item_name, item_num, 
      gmt_create, gmt_modified, operator
      )
    values (#{typeId,jdbcType=INTEGER}, #{itemName,jdbcType=VARCHAR}, #{itemNum,jdbcType=INTEGER}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aaa.entity.ConsumeItem">
    <selectKey keyProperty="itemId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into consume_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typeId != null">
        type_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="itemNum != null">
        item_num,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemNum != null">
        #{itemNum,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aaa.entity.ConsumeItemExample" resultType="java.lang.Long">
    select count(*) from consume_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update consume_item
    <set>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null">
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemNum != null">
        item_num = #{record.itemNum,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update consume_item
    set item_id = #{record.itemId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      item_num = #{record.itemNum,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aaa.entity.ConsumeItem">
    update consume_item
    <set>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemNum != null">
        item_num = #{itemNum,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aaa.entity.ConsumeItem">
    update consume_item
    set type_id = #{typeId,jdbcType=INTEGER},
      item_name = #{itemName,jdbcType=VARCHAR},
      item_num = #{itemNum,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <!-- 涉及多表 -->
  <resultMap type="com.aaa.entity.ConsumeItem" id="fullMap" extends="BaseResultMap">
  	<association property="consumeItemType" 
  		resultMap="com.aaa.dao.ConsumeItemTypeMapper.BaseResultMap"
  		columnPrefix="ref_">
  	</association>
  </resultMap>
  <sql id="Type_Clolumn_List">
  	base.item_id, base.type_id, base.item_name, base.item_num, base.gmt_create, base.gmt_modified, base.operator,
  	type.type_id as ref_type_id, type.type_name as ref_type_name, type.gmt_create as ref_gmt_create, type.gmt_modified as ref_gmt_modified, type.operator as ref_operator
  </sql>
  <select id="selectFullByExample" parameterType="map" resultMap="fullMap">
  	select
    <include refid="Type_Clolumn_List" />
    from consume_item base,consume_item_type type
    <where>
    	and ( type.type_id = base.type_id )
    	<if test="typeId != null">
    		and ( type.type_id = ${typeId} )
    	</if>
    </where>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.limit != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.limit}
      </if>
      <if test="example.offset == null">
        limit ${example.limit}
      </if>
    </if>
  </select>
</mapper>