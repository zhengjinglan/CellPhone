<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.dao.FettlerMapper">
  <resultMap id="BaseResultMap" type="com.aaa.entity.Fettler">
    <id column="fettler_id" jdbcType="INTEGER" property="fettlerId" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="fettler_phone" jdbcType="VARCHAR" property="fettlerPhone" />
    <result column="work_city" jdbcType="VARCHAR" property="workCity" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fettler_id, emp_id, fettler_phone, work_city, gmt_create, gmt_modified, state, operator
  </sql>
  <select id="selectByExample" parameterType="com.aaa.entity.FettlerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fettler
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fettler
    where fettler_id = #{fettlerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fettler
    where fettler_id = #{fettlerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aaa.entity.FettlerExample">
    delete from fettler
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aaa.entity.Fettler">
    <selectKey keyProperty="fettlerId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fettler (emp_id, fettler_phone, work_city, 
      gmt_create, gmt_modified, state, 
      operator)
    values (#{empId,jdbcType=INTEGER}, #{fettlerPhone,jdbcType=VARCHAR}, #{workCity,jdbcType=VARCHAR}, 
      now(), now(), #{state,jdbcType=VARCHAR}, 
      #{operator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aaa.entity.Fettler">
    <selectKey keyProperty="fettlerId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fettler
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="fettlerPhone != null">
        fettler_phone,
      </if>
      <if test="workCity != null">
        work_city,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="fettlerPhone != null">
        #{fettlerPhone,jdbcType=VARCHAR},
      </if>
      <if test="workCity != null">
        #{workCity,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aaa.entity.FettlerExample" resultType="java.lang.Long">
    select count(*) from fettler
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fettler
    <set>
      <if test="record.fettlerId != null">
        fettler_id = #{record.fettlerId,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.fettlerPhone != null">
        fettler_phone = #{record.fettlerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.workCity != null">
        work_city = #{record.workCity,jdbcType=VARCHAR},
      </if>
    
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
        
        gmt_modified = now()
     
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fettler
    set fettler_id = #{record.fettlerId,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=INTEGER},
      fettler_phone = #{record.fettlerPhone,jdbcType=VARCHAR},
      work_city = #{record.workCity,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aaa.entity.Fettler">
    update fettler
    <set>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="fettlerPhone != null">
        fettler_phone = #{fettlerPhone,jdbcType=VARCHAR},
      </if>
      <if test="workCity != null">
        work_city = #{workCity,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where fettler_id = #{fettlerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aaa.entity.Fettler">
    update fettler
    set emp_id = #{empId,jdbcType=INTEGER},
      fettler_phone = #{fettlerPhone,jdbcType=VARCHAR},
      work_city = #{workCity,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR}
    where fettler_id = #{fettlerId,jdbcType=INTEGER}
  </update>
  <select id="queryByState">
  select f.fettler_id fettlerId,f.emp_id empId,
f.fettler_phone fettlerPhone,f.work_city workCity,
f.gmt_create gmtCreate,f.gmt_modified gmtModifed,
f.state state,f.operator operator,
e.emp_id,e.emp_name empName
from fettler f
left join emp e
on f.emp_id=e.emp_id
where f.state='休息中'
<if test="param1 != null">
and f.work_city=#{param1}
</if>
  </select>
   <select id="query" parameterType="map" resultType="map">
  select f.fettler_id fettlerId,f.emp_id empId,
f.fettler_phone fettlerPhone,f.work_city workCity,
f.gmt_create gmtCreate,f.gmt_modified gmtModified,
f.state state,f.operator operator,
e.emp_id,e.emp_name empName
from fettler f
left join emp e
on f.emp_id=e.emp_id
<where>
<if test="param1 != null and param1.empId != null">
	f.emp_id=#{empId}
</if>
</where>
<if test="param2 != null and param3 != null">
	limit #{param2},#{param3}
</if>
  </select>
</mapper>