<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.dao.PurchaseMapper">
  <resultMap id="BaseResultMap" type="com.aaa.entity.Purchase">
    <id column="purchase_id" jdbcType="INTEGER" property="purchaseId" />
    <result column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="purchase_num" jdbcType="INTEGER" property="purchaseNum" />
    <result column="purchase_price" jdbcType="DECIMAL" property="purchasePrice" />
    <result column="purchase_sum" jdbcType="DECIMAL" property="purchaseSum" />
    <result column="purchase_buyer" jdbcType="VARCHAR" property="purchaseBuyer" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    purchase_id, item_id, company_id, purchase_num, purchase_price, purchase_sum, purchase_buyer, 
    gmt_create, gmt_modified, operator
  </sql>
  <select id="selectByExample" parameterType="com.aaa.entity.PurchaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from purchase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from purchase
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from purchase
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aaa.entity.PurchaseExample">
    delete from purchase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aaa.entity.Purchase">
    <selectKey keyProperty="purchaseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into purchase (item_id, company_id, purchase_num, 
      purchase_price, purchase_sum, purchase_buyer, 
      gmt_create, gmt_modified, operator
      )
    values (#{itemId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{purchaseNum,jdbcType=INTEGER}, 
      #{purchasePrice,jdbcType=DECIMAL}, #{purchaseSum,jdbcType=DECIMAL}, #{purchaseBuyer,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aaa.entity.Purchase">
    <selectKey keyProperty="purchaseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into purchase
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        item_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="purchaseNum != null">
        purchase_num,
      </if>
      <if test="purchasePrice != null">
        purchase_price,
      </if>
      <if test="purchaseSum != null">
        purchase_sum,
      </if>
      <if test="purchaseBuyer != null">
        purchase_buyer,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="purchaseNum != null">
        #{purchaseNum,jdbcType=INTEGER},
      </if>
      <if test="purchasePrice != null">
        #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="purchaseSum != null">
        #{purchaseSum,jdbcType=DECIMAL},
      </if>
      <if test="purchaseBuyer != null">
        #{purchaseBuyer,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aaa.entity.PurchaseExample" resultType="java.lang.Long">
    select count(*) from purchase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update purchase
    <set>
      <if test="record.purchaseId != null">
        purchase_id = #{record.purchaseId,jdbcType=INTEGER},
      </if>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.purchaseNum != null">
        purchase_num = #{record.purchaseNum,jdbcType=INTEGER},
      </if>
      <if test="record.purchasePrice != null">
        purchase_price = #{record.purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.purchaseSum != null">
        purchase_sum = #{record.purchaseSum,jdbcType=DECIMAL},
      </if>
      <if test="record.purchaseBuyer != null">
        purchase_buyer = #{record.purchaseBuyer,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update purchase
    set purchase_id = #{record.purchaseId,jdbcType=INTEGER},
      item_id = #{record.itemId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      purchase_num = #{record.purchaseNum,jdbcType=INTEGER},
      purchase_price = #{record.purchasePrice,jdbcType=DECIMAL},
      purchase_sum = #{record.purchaseSum,jdbcType=DECIMAL},
      purchase_buyer = #{record.purchaseBuyer,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aaa.entity.Purchase">
    update purchase
    <set>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="purchaseNum != null">
        purchase_num = #{purchaseNum,jdbcType=INTEGER},
      </if>
      <if test="purchasePrice != null">
        purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="purchaseSum != null">
        purchase_sum = #{purchaseSum,jdbcType=DECIMAL},
      </if>
      <if test="purchaseBuyer != null">
        purchase_buyer = #{purchaseBuyer,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aaa.entity.Purchase">
    update purchase
    set item_id = #{itemId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      purchase_num = #{purchaseNum,jdbcType=INTEGER},
      purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      purchase_sum = #{purchaseSum,jdbcType=DECIMAL},
      purchase_buyer = #{purchaseBuyer,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR}
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </update>
</mapper>