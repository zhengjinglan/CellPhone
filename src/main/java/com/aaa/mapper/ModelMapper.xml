<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.dao.ModelMapper">
  <resultMap id="BaseResultMap" type="com.aaa.entity.Model">
    <id column="model_id" jdbcType="INTEGER" property="modelId" />
    <result column="series_id" jdbcType="INTEGER" property="seriesId" />
    <result column="model_name" jdbcType="VARCHAR" property="modelName" />
    <result column="model_photo" jdbcType="VARCHAR" property="modelPhoto" />
    <result column="colors" jdbcType="VARCHAR" property="colors" />
    <result column="model_description" jdbcType="VARCHAR" property="modelDescription" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    model_id, series_id, model_name, model_photo, colors, model_description, gmt_create,
    gmt_modified, operator
  </sql>
  <select id="selectByExample" parameterType="com.aaa.entity.ModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from model
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from model
    where model_id = #{modelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from model
    where model_id = #{modelId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aaa.entity.ModelExample">
    delete from model
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aaa.entity.Model">
    <selectKey keyProperty="modelId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into model (series_id, model_name, model_photo,
      colors, model_description, gmt_create,
      gmt_modified, operator)
    values (#{seriesId,jdbcType=INTEGER}, #{modelName,jdbcType=VARCHAR}, #{modelPhoto,jdbcType=VARCHAR},
      #{colors,jdbcType=VARCHAR}, #{modelDescription,jdbcType=VARCHAR}, now(),
      now(), #{operator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aaa.entity.Model">
    <selectKey keyProperty="modelId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into model
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seriesId != null">
        series_id,
      </if>
      <if test="modelName != null">
        model_name,
      </if>
      <if test="modelPhoto != null">
        model_photo,
      </if>
      <if test="colors != null">
        colors,
      </if>
      <if test="modelDescription != null">
        model_description,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seriesId != null">
        #{seriesId,jdbcType=INTEGER},
      </if>
      <if test="modelName != null">
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="modelPhoto != null">
        #{modelPhoto,jdbcType=VARCHAR},
      </if>
      <if test="colors != null">
        #{colors,jdbcType=VARCHAR},
      </if>
      <if test="modelDescription != null">
        #{modelDescription,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aaa.entity.ModelExample" resultType="java.lang.Long">
    select count(*) from model
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update model
    <set>
      <if test="record.modelId != null">
        model_id = #{record.modelId,jdbcType=INTEGER},
      </if>
      <if test="record.seriesId != null">
        series_id = #{record.seriesId,jdbcType=INTEGER},
      </if>
      <if test="record.modelName != null">
        model_name = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelPhoto != null">
        model_photo = #{record.modelPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.colors != null">
        colors = #{record.colors,jdbcType=VARCHAR},
      </if>
      <if test="record.modelDescription != null">
        model_description = #{record.modelDescription,jdbcType=VARCHAR},
      </if>

      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>

        gmt_modified = now(),

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update model
    set model_id = #{record.modelId,jdbcType=INTEGER},
      series_id = #{record.seriesId,jdbcType=INTEGER},
      model_name = #{record.modelName,jdbcType=VARCHAR},
      model_photo = #{record.modelPhoto,jdbcType=VARCHAR},
      colors = #{record.colors,jdbcType=VARCHAR},
      model_description = #{record.modelDescription,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aaa.entity.Model">
    update model
    <set>
      <if test="seriesId != null">
        series_id = #{seriesId,jdbcType=INTEGER},
      </if>
      <if test="modelName != null">
        model_name = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="modelPhoto != null">
        model_photo = #{modelPhoto,jdbcType=VARCHAR},
      </if>
      <if test="colors != null">
        colors = #{colors,jdbcType=VARCHAR},
      </if>
      <if test="modelDescription != null">
        model_description = #{modelDescription,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where model_id = #{modelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aaa.entity.Model">
    update model
    set series_id = #{seriesId,jdbcType=INTEGER},
      model_name = #{modelName,jdbcType=VARCHAR},
      model_photo = #{modelPhoto,jdbcType=VARCHAR},
      colors = #{colors,jdbcType=VARCHAR},
      model_description = #{modelDescription,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR}
    where model_id = #{modelId,jdbcType=INTEGER}
  </update>
  <select id="query" resultType="map" parameterType="map">
  	select m.model_id modelId,m.series_id seriesId,
m.model_name modelName,m.model_photo modelPhoto,
m.colors colors,m.model_description modelDescription,
m.gmt_create gmtCreate,m.gmt_modified gmtModified,
m.operator operator,s.series_id,s.series_name seriesName
from model m
left join series s
on s.series_id=m.series_id
<where>
	<if test="param1 !=null and param1.seriesId!=null">
	m.series_id=#{param1.seriesId} and
	</if>

</where>
<if test="param2!=null and param3!=null">
	limit #{param2},#{param3}
	</if>
  </select>

  <select id="queryModel" parameterType="com.aaa.entity.Model" resultMap="BaseResultMap">
  	select * from model
  	<where>
  		<if test="seriesId !=null">
  			series_id=#{seriesId}
  		</if>
  	</where>
  </select>
</mapper>
